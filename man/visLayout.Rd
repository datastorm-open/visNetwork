% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visLayout.R
\name{visLayout}
\alias{visLayout}
\title{Network visualization layout options}
\usage{
visLayout(
  graph,
  randomSeed = NULL,
  improvedLayout = NULL,
  clusterThreshold = NULL,
  hierarchical = NULL
)
}
\arguments{
\item{graph}{: a visNetwork object}

\item{randomSeed}{: Number. When NOT using the hierarchical layout, the nodes are randomly positioned initially. This means that the settled result is different every time. If you provide a random seed manually, the layout will be the same every time. Ideally you try with an undefined seed, reload until you are happy with the layout and use the getSeed() method to ascertain the seed.}

\item{improvedLayout}{: Boolean. Default to true. When enabled, the network will use the Kamada Kawai algorithm for initial layout. For networks larger than 100 nodes, clustering will be performed automatically to reduce the amount of nodes. This can greatly improve the stabilization times. If the network is very interconnected (no or few leaf nodes), this may not work and it will revert back to the old method. Performance will be improved in the future.}

\item{clusterThreshold}{:    Number. Default to    150. Cluster threshold to which improvedLayout applies.}

\item{hierarchical}{: Boolean. Default to false. When true, the layout engine positions the nodes in a hierarchical fashion using default settings. For customization you can use \link[pkg:visNetwork]{visHierarchicalLayout}}
}
\description{
Network visualization layout options. For full documentation, have a look at \link[pkg:visNetwork]{visDocumentation}.
}
\examples{

nodes <- data.frame(id = 1:10)
edges <- data.frame(from = round(runif(8)*10), to = round(runif(8)*10))

# fix seed, so you retrieve same network each time...!
visNetwork(nodes, edges) \%>\%
 visLayout(randomSeed = 123) 

visNetwork(nodes, edges) \%>\%
 visLayout(randomSeed = 123)   
 
# hierarchical
visNetwork(nodes, edges) \%>\%
 visLayout(hierarchical = TRUE) 
 
visNetwork(nodes, edges) \%>\%
 visHierarchicalLayout(direction = "LR")

}
\references{
See online documentation \url{https://datastorm-open.github.io/visNetwork/}
}
\seealso{
\link[pkg:visNetwork]{visNodes} for nodes options, \link[pkg:visNetwork]{visEdges} for edges options, \link[pkg:visNetwork]{visGroups} for groups options, 
\link[pkg:visNetwork]{visLegend} for adding legend, \link[pkg:visNetwork]{visOptions} for custom option, \link[pkg:visNetwork]{visLayout} & \link[pkg:visNetwork]{visHierarchicalLayout} for layout, 
\link[pkg:visNetwork]{visPhysics} for control physics, \link[pkg:visNetwork]{visInteraction} for interaction, \link[pkg:visNetwork]{visNetworkProxy} & \link[pkg:visNetwork]{visFocus} & \link[pkg:visNetwork]{visFit} for animation within shiny,
\link[pkg:visNetwork]{visDocumentation}, \link[pkg:visNetwork]{visEvents}, \link[pkg:visNetwork]{visConfigure} ...
}
